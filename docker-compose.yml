services:
  rt-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_ENV=${APP_ENV:-development}
    container_name: rt-api-service
    restart: unless-stopped
    ports:
      - "${API_PORT:-8081}:80"
      - "${API_HTTPS_PORT:-8443}:443"
    volumes:
      - ./api:/var/www/html/api
      - ./src:/var/www/html/src
      - ./logs:/var/log/apache2
      - ./tmp:/tmp
    environment:
      - APP_ENV=${APP_ENV:-development}
      - APACHE_DOCUMENT_ROOT=/var/www/html/api
      - PHP_MEMORY_LIMIT=512M
      - PHP_UPLOAD_MAX_FILESIZE=64M
      - PHP_POST_MAX_SIZE=64M
      - PHP_MAX_EXECUTION_TIME=300
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - rt-network
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:8.0
    container_name: rt-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_DATABASE:-rt_shared}
      MYSQL_USER: ${DB_USERNAME:-rt_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-rt_password}
    ports:
      - "${DB_PORT:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USERNAME:-rt_user}", "-p${DB_PASSWORD:-rt_password}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - rt-network

  redis:
    image: redis:alpine
    container_name: rt-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_data:/data
    networks:
      - rt-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: rt-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 100M
    ports:
      - "${PMA_PORT:-8080}:80"
    depends_on:
      - mysql
    networks:
      - rt-network

networks:
  rt-network:
    driver: bridge
    name: rt-shared-network

volumes:
  mysql_data:
  redis_data:
